{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","error","console","log","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setMessage","setError","useEffect","noteService","initialNotes","length","notesToShow","filter","map","i","changedNote","returnedNote","catch","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","newNotes","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60705671.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const label = note.important\r\n      ? 'make not important' : 'make important'\r\n    return (\r\n      <>\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default Note  \r\n","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/notes'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n    // return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create,  update}","const Notification = ({ message, error }) => {\r\n\r\n    const className = `message ${error ? 'error' : 'succesfully'}` \r\n    console.log(className)\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","const Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n      </div>\r\n    )\r\n}\r\nexport default Footer  ","import React, {useState, useEffect} from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState(\"\")\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n  const [message, setMessage] = useState(null)\r\n  const [error, setError] = useState(false)\r\n\r\n\r\n  const hook = () => {\r\n      noteService\r\n      .getAll()\r\n      .then(initialNotes => setNotes(initialNotes))\r\n      console.log('effect')\r\n  }\r\n\r\n  useEffect(hook, [])\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    // console.log('button clicked', event.target)\r\n\r\n    // Esto tambiÃ©n funciona....\r\n    // const newNotes = [...notes, {\r\n    //   id: notes.length+1,\r\n    //   content:newNote,\r\n    //   date: new Date().toISOString(),\r\n    //   important: Math.random()>0.5 }]\r\n    // console.log(newNotes)\r\n    // setNotes(newNotes)\r\n\r\n    const newNotes = {\r\n      // id: notes.length+1,\r\n      content:newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random()>0.5 }\r\n    \r\n    noteService\r\n      .create(newNotes)\r\n      .then(returnedNote  => {\r\n        setMessage(\r\n          `Note '${returnedNote.content}' added succesfully`\r\n        )\r\n        setError(false)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.concat(returnedNote))  // Para agregar un nuevo elemento.\r\n        setNewNote(\"\")\r\n\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  const handleChangeNote = (event) => {\r\n   console.log(event.target.value); \r\n   setNewNote(event.target.value) \r\n  }\r\n\r\n  const notesToShow = showAll\r\n        ? notes\r\n        : notes.filter(note => note.important === true )\r\n\r\n  const toggleImportanceOf = (id,note) => {\r\n    // const url = `http://localhost:3001/notes/${id}`\r\n    // const note = notes.find(n => n.id === id)\r\n    console.log(note)\r\n\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    console.log(changedNote)\r\n\r\n    noteService\r\n    .update(id,changedNote)\r\n    .then(returnedNote  => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n    })\r\n    .catch(error => {\r\n      setMessage(\r\n        `Note '${note.content}' was already removed from server`\r\n      )\r\n      setError(true)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n    \r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={message} error={error}/>\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll ? 'important' : 'all' }\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {notesToShow && notesToShow.map((note,i) =>\r\n              <Note key={i} note={note} toggleImportance={()=>toggleImportanceOf(note.id,note)}/>\r\n            )\r\n          }\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input \r\n            value={newNote}\r\n            onChange={handleChangeNote} />\r\n          <button type=\"submit\">save</button>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}